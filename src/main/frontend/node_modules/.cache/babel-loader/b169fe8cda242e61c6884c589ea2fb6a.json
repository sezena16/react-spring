{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Computer\\\\Desktop\\\\homework\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\List\\\\ChartwithDate.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nexport default class ChartwithDate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      axios.get(\"/users/activities\").then(res => {\n        console.log(res);\n        const ipl = res.data;\n        let playername = [];\n        let runscore = [];\n        ipl.forEach(record => {\n          let value = record.startDate.toString();\n          let date = value.substring(0, 9);\n          playername.push(record.activityName);\n          runscore.push(record.startDate);\n        });\n        this.setState({\n          Data: {\n            labels: playername,\n            datasets: [{\n              label: 'Dates',\n              data: runscore,\n              backgroundColor: [\"#3cb371\", \"#0000FF\", \"#9966FF\", \"#4C4CFF\", \"#00FFFF\", \"#f990a7\", \"#aad2ed\", \"#FF00FF\", \"Blue\", \"Red\"]\n            }]\n          }\n        });\n      });\n    };\n\n    this.state = {\n      Data: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: this.state.Data,\n      options: {\n        maintainAspectRatio: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Computer/Desktop/homework/src/main/frontend/src/components/List/ChartwithDate.js"],"names":["React","Component","axios","Bar","ChartwithDate","constructor","props","componentDidMount","get","then","res","console","log","ipl","data","playername","runscore","forEach","record","value","startDate","toString","date","substring","push","activityName","setState","Data","labels","datasets","label","backgroundColor","state","render","maintainAspectRatio"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AAEA,eAAe,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACjDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAInBC,iBAJmB,GAID,MAAK;AACnBL,MAAAA,KAAK,CAACM,GAAN,CAAU,mBAAV,EACKC,IADL,CACUC,GAAG,IAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,cAAMG,GAAG,GAAGH,GAAG,CAACI,IAAhB;AACA,YAAIC,UAAU,GAAG,EAAjB;AACA,YAAIC,QAAQ,GAAG,EAAf;AACAH,QAAAA,GAAG,CAACI,OAAJ,CAAYC,MAAM,IAAI;AAClB,cAAIC,KAAK,GAACD,MAAM,CAACE,SAAP,CAAiBC,QAAjB,EAAV;AACA,cAAIC,IAAI,GAACH,KAAK,CAACI,SAAN,CAAgB,CAAhB,EAAkB,CAAlB,CAAT;AACAR,UAAAA,UAAU,CAACS,IAAX,CAAgBN,MAAM,CAACO,YAAvB;AACAT,UAAAA,QAAQ,CAACQ,IAAT,CAAcN,MAAM,CAACE,SAArB;AACH,SALD;AAMA,aAAKM,QAAL,CAAc;AACVC,UAAAA,IAAI,EAAE;AACFC,YAAAA,MAAM,EAAEb,UADN;AAEFc,YAAAA,QAAQ,EAAE,CACN;AACIC,cAAAA,KAAK,EAAE,OADX;AAEIhB,cAAAA,IAAI,EAAEE,QAFV;AAGIe,cAAAA,eAAe,EAAE,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,EAMb,SANa,EAOb,SAPa,EAQb,SARa,EASb,MATa,EAUb,KAVa;AAHrB,aADM;AAFR;AADI,SAAd;AAuBH,OAnCL;AAoCH,KAzCkB;;AAEf,SAAKC,KAAL,GAAa;AAAEL,MAAAA,IAAI,EAAE;AAAR,KAAb;AACH;;AAuCDM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWL,IAAtB;AAA4B,MAAA,OAAO,EAAE;AAAEO,QAAAA,mBAAmB,EAAE;AAAvB,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAjDgD","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nexport default class ChartwithDate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { Data: {} };\r\n    }\r\n    componentDidMount=()=> {\r\n        axios.get(\"/users/activities\")\r\n            .then(res => {\r\n                console.log(res);\r\n                const ipl = res.data;\r\n                let playername = [];\r\n                let runscore = [];\r\n                ipl.forEach(record => {\r\n                    let value=record.startDate.toString();\r\n                    let date=value.substring(0,9);\r\n                    playername.push(record.activityName);\r\n                    runscore.push(record.startDate);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: playername,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Dates',\r\n                                data: runscore,\r\n                                backgroundColor: [\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Bar data={this.state.Data} options={{ maintainAspectRatio: false}} />\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}