{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Computer\\\\Desktop\\\\homework\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\List\\\\ChartwithDate.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nexport default class ChartwithDate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      axios.get(\"/users/activities\").then(res => {\n        console.log(res);\n        const ipl = res.data;\n        let playername = [];\n        let runscore = [];\n        let counter = [];\n        ipl.forEach(record => {\n          let value = record.startDate.toString();\n          let date = value.split(\"T\");\n          let main = [];\n          main.push(date[0]);\n          counter.push(record.registered);\n          playername.push(main);\n\n          for (let i = 0; i < main.length - 1; i++) {\n            for (let j = 1; j < main.length; j++) {\n              if (main[i] === main[j]) {\n                if (i >= j) {\n                  counter[j] = counter[i] + counter[j];\n                  counter = counter.filter(it => it !== i);\n                } else {\n                  counter[i] = counter[i] + counter[j];\n                  counter = counter.filter(it => it !== j);\n                }\n              }\n            }\n          }\n\n          runscore.push(record.registered);\n        });\n        this.setState({\n          Data: {\n            labels: playername,\n            datasets: [{\n              label: 'Dates',\n              data: counter,\n              backgroundColor: [\"#3cb371\", \"#0000FF\", \"#9966FF\", \"#4C4CFF\", \"#00FFFF\", \"#f990a7\", \"#aad2ed\", \"#FF00FF\", \"Blue\", \"Red\"]\n            }]\n          }\n        });\n      });\n    };\n\n    this.state = {\n      Data: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: this.state.Data,\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Computer/Desktop/homework/src/main/frontend/src/components/List/ChartwithDate.js"],"names":["React","Component","axios","Bar","ChartwithDate","constructor","props","componentDidMount","get","then","res","console","log","ipl","data","playername","runscore","counter","forEach","record","value","startDate","toString","date","split","main","push","registered","i","length","j","filter","it","setState","Data","labels","datasets","label","backgroundColor","state","render","maintainAspectRatio","scales","yAxes","ticks","beginAtZero"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nexport default class ChartwithDate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { Data: {} };\r\n    }\r\n    componentDidMount=()=> {\r\n        axios.get(\"/users/activities\")\r\n            .then(res => {\r\n                console.log(res);\r\n                const ipl = res.data;\r\n                let playername = [];\r\n                let runscore = [];\r\n                let counter=[];\r\n                ipl.forEach(record => {\r\n                    let value=record.startDate.toString();\r\n                    let date=value.split(\"T\");\r\n                    let main=[];\r\n                    main.push(date[0]);\r\n                    counter.push(record.registered);\r\n                    playername.push(main);\r\n                    for(let i=0;i<main.length-1;i++){\r\n                        for(let j=1;j<main.length;j++){\r\n                            if(main[i]===main[j]){\r\n                                if(i>=j)\r\n                                {\r\n                                    counter[j]=counter[i]+counter[j];\r\n                                    counter=counter.filter(it => it!==i);\r\n                                }\r\n                                else{\r\n                                    counter[i]=counter[i]+counter[j];\r\n                                    counter=counter.filter(it => it!==j);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    runscore.push(record.registered);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: playername,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Dates',\r\n                                data: counter,\r\n                                backgroundColor: [\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Bar data={this.state.Data} options={{ maintainAspectRatio: false,\r\n                    scales: { yAxes: [{ ticks: {beginAtZero: true}}]}\r\n                }} />\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}