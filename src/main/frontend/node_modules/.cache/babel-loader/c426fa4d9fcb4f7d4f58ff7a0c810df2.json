{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Computer\\\\Desktop\\\\homework\\\\src\\\\main\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport PaginationTable from \"./components/table/PaginationTable\";\nimport Button from \"@material-ui/core/Button\";\nimport PlusIcon from '@material-ui/icons/Add';\nimport axios from \"axios\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport ReactDialog from \"./components/common/ReactDialog\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.activityDialogFields = [{\n      id: \"name\",\n      label: \"Name\",\n      type: \"text\"\n    }, {\n      id: \"start_date\",\n      label: \"Start Date\",\n      type: \"text\"\n    }, {\n      id: \"end_date\",\n      label: \"End Date\",\n      type: \"text\"\n    }];\n\n    this.componentDidMount = username => {\n      axios.get(\"/users/\" + username + \"/activities\").then(response => {\n        this.setState({\n          rows: response.data\n        });\n      });\n    };\n\n    this.toggleAddActivityModal = () => {\n      this.setState({\n        addActivityModalOpen: !this.state.addActivityModalOpen\n      });\n    };\n\n    this.submitActivityAdd = (username, inputData) => {\n      this.toggleAddActivityModal();\n      axios.post(\"/users/\" + username + \"/activities\", inputData).then(response => {\n        this.setState(prevState => ({\n          rows: [...prevState.rows, response.data]\n        }));\n        this.snackbarOpen(\"Activity has been added successfully!\", \"success\");\n      }).catch(error => {\n        if (error.response.status === 400) {\n          this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\");\n        }\n\n        console.log(error.response);\n      });\n    };\n\n    this.snackbarOpen = (message, severity) => {\n      console.log(message, severity);\n      this.setState(prevState => {\n        let snackbarProperties = { ...prevState.snackbarProperties\n        };\n        snackbarProperties.isOpen = true;\n        snackbarProperties.message = message;\n        snackbarProperties.severity = severity;\n        return {\n          snackbarProperties\n        };\n      });\n    };\n\n    this.snackbarClose = () => {\n      this.setState(prevState => {\n        let snackbarProperties = { ...prevState.snackbarProperties\n        };\n        snackbarProperties.isOpen = false;\n        snackbarProperties.message = \"\";\n        snackbarProperties.severity = \"\";\n        return {\n          snackbarProperties\n        };\n      });\n    };\n\n    this.onActivityUpdate = (username, inputData) => {\n      axios.put(\"/users/\" + username + \"/activities/\" + inputData.activityName, inputData).then(response => {\n        this.setState({\n          rows: this.state.rows.filter(activity => activity.name !== inputData.activityName)\n        });\n        this.setState(prevState => ({\n          rows: [...prevState.rows, response.data]\n        }));\n        this.snackbarOpen(\"Activity: \" + inputData.activityName + \"has been updated!\", \"success\");\n      });\n    };\n\n    this.onActivityDelete = (username, activityName) => {\n      axios.delete(\"/users/\" + username + \"/activities/\" + activityName).then(response => {\n        this.setState({\n          rows: this.state.rows.filter(activity => activity.name !== activityName)\n        });\n        this.snackbarOpen(\"Activity: \" + activityName + \"has been deleted!\", \"success\");\n      });\n    };\n\n    this.state = {\n      rows: [],\n      addActivityModalOpen: false,\n      snackbarProperties: {\n        isOpen: false,\n        message: \"\",\n        severity: \"\"\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        float: \"right\"\n      },\n      onClick: this.toggleAddActivityModal,\n      startIcon: /*#__PURE__*/React.createElement(PlusIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 30\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"Add Activity\"), /*#__PURE__*/React.createElement(Snackbar, {\n      open: this.state.snackbarProperties.isOpen,\n      autoHideDuration: 5000,\n      onClose: this.snackbarClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: this.snackbarClose,\n      severity: this.state.snackbarProperties.severity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, this.state.snackbarProperties.message)), /*#__PURE__*/React.createElement(ReactDialog, {\n      fields: this.activityDialogFields,\n      title: \"Add Activity\",\n      isOpen: this.state.addactivityModalOpen,\n      onClose: this.toggleAddActivityModal,\n      onSubmit: this.submitActivityAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(PaginationTable, {\n      rows: this.state.rows,\n      onUpdate: /*#__PURE__*/React.createElement(ReactDialog, {\n        fields: this.activityDialogFields,\n        title: \"Update Activity\",\n        isOpen: this.state.addactivityModalOpen,\n        onClose: this.toggleAddActivityModal,\n        onSubmit: this.onActivityUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 61\n        }\n      }),\n      onDelete: this.onActivityDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Computer/Desktop/homework/src/main/frontend/src/App.js"],"names":["React","Component","PaginationTable","Button","PlusIcon","axios","Snackbar","Alert","ReactDialog","App","constructor","activityDialogFields","id","label","type","componentDidMount","username","get","then","response","setState","rows","data","toggleAddActivityModal","addActivityModalOpen","state","submitActivityAdd","inputData","post","prevState","snackbarOpen","catch","error","status","errors","defaultMessage","console","log","message","severity","snackbarProperties","isOpen","snackbarClose","onActivityUpdate","put","activityName","filter","activity","name","onActivityDelete","delete","render","float","vertical","horizontal","addactivityModalOpen"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PaginationTable from \"./components/table/PaginationTable\";\nimport Button from \"@material-ui/core/Button\";\nimport PlusIcon from '@material-ui/icons/Add';\nimport axios from \"axios\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport ReactDialog from \"./components/common/ReactDialog\";\n\nclass App extends Component{\n  activityDialogFields = [\n    {id: \"name\", label: \"Name\", type: \"text\"},\n    {id: \"start_date\", label: \"Start Date\", type: \"text\"},\n    {id: \"end_date\", label: \"End Date\", type: \"text\"},\n  ]\n\n\n  constructor() {\n    super();\n    this.state = {\n      rows: [],\n      addActivityModalOpen: false,\n      snackbarProperties: {\n        isOpen: false,\n        message: \"\",\n        severity: \"\"\n      }\n    }\n  }\n\n  componentDidMount = (username) => {\n    axios.get(\"/users/\"+username+\"/activities\")\n        .then(response => {\n          this.setState({rows: response.data})\n        })\n  }\n\n  toggleAddActivityModal = () => {\n    this.setState({addActivityModalOpen: !this.state.addActivityModalOpen})\n  }\n\n  submitActivityAdd = (username,inputData) => {\n    this.toggleAddActivityModal();\n    axios.post(\"/users/\"+username+\"/activities\", inputData)\n        .then(response => {\n          this.setState(prevState => (\n              {rows: [...prevState.rows, response.data]}\n          ));\n          this.snackbarOpen(\"Activity has been added successfully!\", \"success\");\n        })\n        .catch(error => {\n          if (error.response.status === 400) {\n            this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\")\n          }\n          console.log(error.response);\n        })\n  }\n\n  snackbarOpen = (message, severity) => {\n    console.log(message, severity);\n    this.setState(prevState => {\n      let snackbarProperties = {...prevState.snackbarProperties}\n      snackbarProperties.isOpen = true;\n      snackbarProperties.message = message;\n      snackbarProperties.severity = severity;\n      return {snackbarProperties};\n    })\n  }\n\n  snackbarClose = () => {\n    this.setState(prevState => {\n      let snackbarProperties = {...prevState.snackbarProperties}\n      snackbarProperties.isOpen = false;\n      snackbarProperties.message = \"\";\n      snackbarProperties.severity = \"\";\n      return {snackbarProperties};\n    })\n  }\n\n  onActivityUpdate = (username,inputData) => {\n    axios.put(\"/users/\" + username + \"/activities/\" + inputData.activityName, inputData)\n        .then(response => {\n          this.setState( {\n            rows: this.state.rows.filter((activity) => activity.name !== inputData.activityName)\n          })\n            this.setState(prevState => (\n                {rows: [...prevState.rows, response.data]}\n            ));\n          this.snackbarOpen(\"Activity: \" + inputData.activityName + \"has been updated!\", \"success\")\n        })\n  }\n\n  onActivityDelete = (username,activityName) => {\n    axios.delete(\"/users/\" + username + \"/activities/\" + activityName)\n        .then(response => {\n          this.setState( {\n            rows: this.state.rows.filter((activity) => activity.name !== activityName)\n          })\n          this.snackbarOpen(\"Activity: \" + activityName + \"has been deleted!\", \"success\")\n        })\n  }\n\n  render() {\n\n    return (\n        <div className=\"App\">\n          <Button variant=\"contained\"\n                  color=\"primary\"\n                  style={{float: \"right\"}}\n                  onClick={this.toggleAddActivityModal}\n                  startIcon={<PlusIcon/>}>\n            Add Activity\n          </Button>\n          <Snackbar open={this.state.snackbarProperties.isOpen} autoHideDuration={5000} onClose={this.snackbarClose}\n                    anchorOrigin={{vertical: 'top', horizontal: 'right'}}>\n            <Alert onClose={this.snackbarClose} severity={this.state.snackbarProperties.severity}>\n              {this.state.snackbarProperties.message}\n            </Alert>\n          </Snackbar>\n          <ReactDialog fields={this.activityDialogFields} title=\"Add Activity\" isOpen={this.state.addactivityModalOpen} onClose={this.toggleAddActivityModal}\n                       onSubmit={this.submitActivityAdd}/>\n          <PaginationTable rows={this.state.rows} onUpdate={<ReactDialog fields={this.activityDialogFields} title=\"Update Activity\" isOpen={this.state.addactivityModalOpen} onClose={this.toggleAddActivityModal}\n                                                                         onSubmit={this.onActivityUpdate}/>} onDelete={this.onActivityDelete}/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}