{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Computer\\\\Desktop\\\\homework\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\Home\\\\OutsideUserHome.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport PaginationTableforOutsideUsers from \"../table/PaginationTableforOutsideUsers\";\nimport ReactDialog from \"../common/ReactDialog\";\nimport QRCode from \"qrcode.react\";\nimport QrReader from \"react-qr-reader\";\n\nclass OutsideUserHome extends Component {\n  constructor(props) {\n    super(props);\n    this.userDialogFields = [{\n      id: \"name\",\n      label: \"Name\",\n      type: \"text\"\n    }, {\n      id: \"surname\",\n      label: \"Surname\",\n      type: \"text\"\n    }, {\n      id: \"trIdNo\",\n      label: \"TR Id Number\",\n      type: \"text\"\n    }];\n\n    this.componentDidMount = () => {\n      console.log(this.props);\n      axios.get(\"/users/activities\").then(response => {\n        this.setState({\n          rows: response.data\n        });\n      }).catch(error => {\n        if (error.response.status === 400) {\n          this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\");\n        } else if (error.response.status === 500) {\n          this.snackbarOpen(error.response.data.message, \"error\");\n        }\n\n        console.log(error.response);\n      });\n    };\n\n    this.toggleRegisterActivityModal = () => {\n      this.setState({\n        registerActivityModalOpen: !this.state.registerActivityModalOpen\n      });\n    };\n\n    this.snackbarOpen = (message, severity) => {\n      console.log(message, severity);\n      this.setState(prevState => {\n        let snackbarProperties = { ...prevState.snackbarProperties\n        };\n        snackbarProperties.isOpen = true;\n        snackbarProperties.message = message;\n        snackbarProperties.severity = severity;\n        return {\n          snackbarProperties\n        };\n      });\n    };\n\n    this.snackbarClose = () => {\n      this.setState(prevState => {\n        let snackbarProperties = { ...prevState.snackbarProperties\n        };\n        snackbarProperties.isOpen = false;\n        snackbarProperties.message = \"\";\n        snackbarProperties.severity = \"\";\n        return {\n          snackbarProperties\n        };\n      });\n    };\n\n    this.onActivityRegister = activityName => {\n      this.toggleRegisterActivityModal();\n      this.setState({\n        activityName: activityName\n      });\n    };\n\n    this.submitActivityRegister = inputData => {\n      this.toggleRegisterActivityModal();\n      axios.post(\"/users/outsideuser\", inputData).then(response => {\n        this.snackbarOpen(\"You have been registered successfully: \" + inputData.name, \"success\");\n        this.setState({\n          name: inputData\n        });\n      }).catch(error => {\n        if (error.response.status === 400) {\n          this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\");\n        } else if (error.response.status === 500) {\n          this.snackbarOpen(error.response.data.message, \"error\");\n        }\n\n        console.log(error.response);\n      });\n      setTimeout(() => {\n        axios.post(\"/users/activities/\" + inputData.trIdNo + \"/\" + this.state.activityName, inputData).then(response => {\n          this.setState({\n            rows: this.state.rows.filter(activity => activity.activityName !== this.state.activityName),\n            registered: true\n          });\n          this.setState(prevState => ({\n            rows: [...prevState.rows, response.data]\n          }));\n          this.snackbarOpen(\"You have been registered successfully to activity: \" + this.state.activityName, \"success\");\n        }).catch(error => {\n          if (error.response.status === 400) {\n            this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\");\n          } else if (error.response.status === 500) {\n            this.snackbarOpen(error.response.data.message, \"error\");\n          }\n\n          console.log(error.response);\n        });\n      }, 5000);\n    };\n\n    this.handleScan = data => {\n      if (data) {\n        this.setState({\n          result: data\n        });\n      }\n    };\n\n    this.handleError = err => {\n      console.error(err);\n    };\n\n    this.state = {\n      rows: [],\n      registerActivityModalOpen: false,\n      activityName: \"\",\n      registered: false,\n      result: \"No Result\",\n      name: [],\n      snackbarProperties: {\n        isOpen: false,\n        message: \"\",\n        severity: \"\"\n      }\n    };\n  }\n\n  render() {\n    if (this.state.registered) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Snackbar, {\n        open: this.state.snackbarProperties.isOpen,\n        autoHideDuration: 5000,\n        onClose: this.snackbarClose,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Alert, {\n        onClose: this.snackbarClose,\n        severity: this.state.snackbarProperties.severity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, this.state.snackbarProperties.message)), /*#__PURE__*/React.createElement(ReactDialog, {\n        fields: this.userDialogFields,\n        title: \"Register to Activity\",\n        isOpen: this.state.registerActivityModalOpen,\n        onClose: this.toggleRegisterActivityModal,\n        onSubmit: this.submitActivityRegister,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(PaginationTableforOutsideUsers, {\n        rows: this.state.rows,\n        onUpdate: this.onActivityRegister,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(QRCode, {\n        id: this.state.name,\n        value: this.state.name,\n        size: 290,\n        level: \"H\",\n        includeMargin: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(QrReader, {\n        delay: 300,\n        onError: this.handleError,\n        onScan: this.handleScan,\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      }, this.state.result)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Snackbar, {\n        open: this.state.snackbarProperties.isOpen,\n        autoHideDuration: 5000,\n        onClose: this.snackbarClose,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Alert, {\n        onClose: this.snackbarClose,\n        severity: this.state.snackbarProperties.severity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }, this.state.snackbarProperties.message)), /*#__PURE__*/React.createElement(ReactDialog, {\n        fields: this.userDialogFields,\n        title: \"Register to Activity\",\n        isOpen: this.state.registerActivityModalOpen,\n        onClose: this.toggleRegisterActivityModal,\n        onSubmit: this.submitActivityRegister,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(PaginationTableforOutsideUsers, {\n        rows: this.state.rows,\n        onUpdate: this.onActivityRegister,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }));\n    }\n  }\n\n}\n\nexport default OutsideUserHome;","map":{"version":3,"sources":["C:/Users/Computer/Desktop/homework/src/main/frontend/src/components/Home/OutsideUserHome.js"],"names":["React","Component","axios","Snackbar","Alert","PaginationTableforOutsideUsers","ReactDialog","QRCode","QrReader","OutsideUserHome","constructor","props","userDialogFields","id","label","type","componentDidMount","console","log","get","then","response","setState","rows","data","catch","error","status","snackbarOpen","errors","defaultMessage","message","toggleRegisterActivityModal","registerActivityModalOpen","state","severity","prevState","snackbarProperties","isOpen","snackbarClose","onActivityRegister","activityName","submitActivityRegister","inputData","post","name","setTimeout","trIdNo","filter","activity","registered","handleScan","result","handleError","err","render","vertical","horizontal","width"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport PaginationTableforOutsideUsers from \"../table/PaginationTableforOutsideUsers\";\r\nimport ReactDialog from \"../common/ReactDialog\";\r\nimport QRCode from \"qrcode.react\"\r\nimport QrReader from \"react-qr-reader\"\r\n\r\nclass OutsideUserHome extends Component{\r\n\r\n    userDialogFields = [\r\n        {id: \"name\", label: \"Name\", type: \"text\"},\r\n        {id: \"surname\", label: \"Surname\", type: \"text\"},\r\n        {id: \"trIdNo\", label: \"TR Id Number\", type: \"text\"},\r\n    ]\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rows: [],\r\n            registerActivityModalOpen: false,\r\n            activityName:\"\",\r\n            registered:false,\r\n            result:\"No Result\",\r\n            name:[],\r\n            snackbarProperties: {\r\n                isOpen: false,\r\n                message: \"\",\r\n                severity: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount=()=> {\r\n        console.log(this.props)\r\n            axios.get(\"/users/activities\")\r\n                .then(response => {\r\n                    this.setState({rows: response.data})\r\n                })\r\n                .catch(error => {\r\n                if (error.response.status === 400) {\r\n                    this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\")\r\n                }\r\n                else if (error.response.status === 500) {\r\n                    this.snackbarOpen(error.response.data.message, \"error\")\r\n                }\r\n                console.log(error.response);\r\n            })\r\n    }\r\n\r\n    toggleRegisterActivityModal = () => {\r\n        this.setState({registerActivityModalOpen: !this.state.registerActivityModalOpen})\r\n    }\r\n\r\n    snackbarOpen = (message, severity) => {\r\n        console.log(message, severity);\r\n        this.setState(prevState => {\r\n            let snackbarProperties = {...prevState.snackbarProperties}\r\n            snackbarProperties.isOpen = true;\r\n            snackbarProperties.message = message;\r\n            snackbarProperties.severity = severity;\r\n            return {snackbarProperties};\r\n        })\r\n    }\r\n\r\n    snackbarClose = () => {\r\n        this.setState(prevState => {\r\n            let snackbarProperties = {...prevState.snackbarProperties}\r\n            snackbarProperties.isOpen = false;\r\n            snackbarProperties.message = \"\";\r\n            snackbarProperties.severity = \"\";\r\n            return {snackbarProperties};\r\n        })\r\n    }\r\n\r\n    onActivityRegister = (activityName) => {\r\n        this.toggleRegisterActivityModal();\r\n        this.setState({activityName:activityName});\r\n    }\r\n\r\n    submitActivityRegister = (inputData) => {\r\n        this.toggleRegisterActivityModal();\r\n        axios.post(\"/users/outsideuser\",inputData)\r\n            .then(response => {\r\n                this.snackbarOpen(\"You have been registered successfully: \" + inputData.name , \"success\")\r\n                this.setState({name:inputData});\r\n        }).catch(error => {\r\n            if (error.response.status === 400) {\r\n                this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\")\r\n            }\r\n            else if (error.response.status === 500) {\r\n                this.snackbarOpen(error.response.data.message, \"error\")\r\n            }\r\n            console.log(error.response);\r\n        })\r\n        setTimeout(() => {\r\n            axios.post(\"/users/activities/\" + inputData.trIdNo +\"/\"+ this.state.activityName, inputData)\r\n                .then(response => {\r\n                    this.setState( {\r\n                        rows: this.state.rows.filter((activity) => activity.activityName !== this.state.activityName),\r\n                        registered:true\r\n                    })\r\n                    this.setState(prevState => (\r\n                        {rows: [...prevState.rows, response.data]}\r\n                    ));\r\n                    this.snackbarOpen(\"You have been registered successfully to activity: \" + this.state.activityName , \"success\")\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 400) {\r\n                        this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\")\r\n                    }\r\n                    else if (error.response.status === 500) {\r\n                        this.snackbarOpen(error.response.data.message, \"error\")\r\n                    }\r\n                    console.log(error.response);\r\n                })\r\n        }, 5000);\r\n    }\r\n\r\n    handleScan = data => {\r\n        if (data) {\r\n            this.setState({\r\n                result: data\r\n            })\r\n        }\r\n    }\r\n    handleError = err => {\r\n        console.error(err)\r\n    }\r\n\r\n    render(){\r\n        if(this.state.registered)\r\n        {\r\n            return (<div>\r\n                <Snackbar open={this.state.snackbarProperties.isOpen} autoHideDuration={5000} onClose={this.snackbarClose}\r\n                          anchorOrigin={{vertical: 'top', horizontal: 'right'}}>\r\n                    <Alert onClose={this.snackbarClose} severity={this.state.snackbarProperties.severity}>\r\n                        {this.state.snackbarProperties.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n\r\n                <ReactDialog fields={this.userDialogFields} title=\"Register to Activity\" isOpen={this.state.registerActivityModalOpen} onClose={this.toggleRegisterActivityModal} onSubmit={this.submitActivityRegister}/>\r\n\r\n                <PaginationTableforOutsideUsers rows={this.state.rows} onUpdate={this.onActivityRegister}/>\r\n\r\n                <div>\r\n                    <QRCode id={this.state.name} value={this.state.name} size={290} level={\"H\"} includeMargin={true}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <QrReader\r\n                        delay={300}\r\n                        onError={this.handleError}\r\n                        onScan={this.handleScan}\r\n                        style={{ width: '100%' }}\r\n                    />\r\n                    <p>{this.state.result}</p>\r\n                </div>\r\n            </div>);\r\n        }\r\n        else{\r\n            return (<div>\r\n                <Snackbar open={this.state.snackbarProperties.isOpen} autoHideDuration={5000} onClose={this.snackbarClose}\r\n                          anchorOrigin={{vertical: 'top', horizontal: 'right'}}>\r\n                    <Alert onClose={this.snackbarClose} severity={this.state.snackbarProperties.severity}>\r\n                        {this.state.snackbarProperties.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n\r\n                <ReactDialog fields={this.userDialogFields} title=\"Register to Activity\" isOpen={this.state.registerActivityModalOpen} onClose={this.toggleRegisterActivityModal} onSubmit={this.submitActivityRegister}/>\r\n\r\n                <PaginationTableforOutsideUsers rows={this.state.rows} onUpdate={this.onActivityRegister}/>\r\n            </div>);\r\n        }\r\n    }\r\n}\r\n\r\nexport default OutsideUserHome;"]},"metadata":{},"sourceType":"module"}