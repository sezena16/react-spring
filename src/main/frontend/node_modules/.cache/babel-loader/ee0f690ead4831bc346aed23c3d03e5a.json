{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Computer\\\\Desktop\\\\homework\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\Home\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport PlusIcon from \"@material-ui/icons/Add\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport ReactDialog from \"../common/ReactDialog\";\nimport PaginationTable from \"../table/PaginationTable\";\nimport SimpleMap from \"../map_components/SimpleMap\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.activityDialogFields = [{\n      id: \"activityName\",\n      label: \"Activity Name\",\n      type: \"text\"\n    }, {\n      id: \"startDate\",\n      label: \"Start Date\",\n      type: \"datetime-local\"\n    }, {\n      id: \"endDate\",\n      label: \"End Date\",\n      type: \"datetime-local\"\n    }, {\n      id: \"capacity\",\n      label: \"Capacity\",\n      type: \"number\"\n    }, {\n      id: \"latitude\",\n      label: \"Latitude\",\n      type: \"float\"\n    }, {\n      id: \"longitude\",\n      label: \"Longitude\",\n      type: \"float\"\n    }];\n\n    this.toggleAddActivityModal = () => {\n      this.setState({\n        addActivityModalOpen: !this.state.addActivityModalOpen\n      });\n    };\n\n    this.toggleUpdateActivityModal = () => {\n      this.setState({\n        updateActivityModalOpen: !this.state.updateActivityModalOpen\n      });\n    };\n\n    this.toggleUpdated = () => {\n      this.setState({\n        updated: !this.state.updated\n      });\n    };\n\n    this.toggleAdded = () => {\n      this.setState({\n        added: !this.state.added\n      });\n    };\n\n    this.toggleDeleted = () => {\n      this.setState({\n        deleted: !this.state.deleted\n      });\n    };\n\n    this.submitActivityAdd = inputData => {\n      this.toggleAddActivityModal();\n      console.log(inputData);\n      axios.post(\"/users/\" + this.props.username + \"/activities\", inputData).then(response => {\n        this.setState(prevState => ({\n          rows: [...prevState.rows, response.data]\n        }));\n        this.snackbarOpen(\"Activity has been added successfully!\", \"success\");\n      }).catch(error => {\n        console.log(error.response);\n\n        if (error.response.status === 400) {\n          this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\");\n        } else if (error.response.status === 500) {\n          this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\");\n        }\n      });\n    };\n\n    this.snackbarOpen = (message, severity) => {\n      console.log(message, severity);\n      this.setState(prevState => {\n        let snackbarProperties = { ...prevState.snackbarProperties\n        };\n        snackbarProperties.isOpen = true;\n        snackbarProperties.message = message;\n        snackbarProperties.severity = severity;\n        return {\n          snackbarProperties\n        };\n      });\n    };\n\n    this.snackbarClose = () => {\n      this.setState(prevState => {\n        let snackbarProperties = { ...prevState.snackbarProperties\n        };\n        snackbarProperties.isOpen = false;\n        snackbarProperties.message = \"\";\n        snackbarProperties.severity = \"\";\n        return {\n          snackbarProperties\n        };\n      });\n    };\n\n    this.onActivityUp = activityName => {\n      this.toggleUpdateActivityModal();\n    };\n\n    this.submitActivityUpdate = inputData => {\n      this.toggleUpdateActivityModal();\n      axios.put(\"/users/\" + this.props.username + \"/activities/\" + inputData.activityName, inputData).then(response => {\n        this.setState({\n          rows: this.state.rows.filter(activity => activity.activityName !== inputData.activityName)\n        });\n        this.setState(prevState => ({\n          rows: [...prevState.rows, response.data]\n        }));\n        this.snackbarOpen(\"Activity: \" + inputData.activityName + \" has been updated!\", \"success\");\n      }).catch(error => {\n        if (error.response.status === 400) {\n          this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\");\n        } else if (error.response.status === 500) {\n          this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\");\n        }\n\n        console.log(error.response);\n      });\n    };\n\n    this.onActivityDelete = activityName => {\n      axios.delete(\"/users/\" + this.props.username + \"/activities/\" + activityName).then(response => {\n        this.setState({\n          rows: this.state.rows.filter(activity => activity.activityName !== activityName)\n        });\n        this.snackbarOpen(\"Activity: \" + activityName + \" has been deleted!\", \"success\");\n      });\n    };\n\n    this.state = {\n      rows: [],\n      addActivityModalOpen: false,\n      updateActivityModalOpen: false,\n      snackbarProperties: {\n        isOpen: false,\n        message: \"\",\n        severity: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    console.log(this.props.username);\n\n    if (this.props.username !== undefined) {\n      axios.get(\"/users/activities\").then(response => {\n        this.setState({\n          rows: response.data\n        });\n      });\n    }\n  }\n\n  render() {\n    if (this.props.username !== undefined) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          float: \"right\"\n        },\n        onClick: this.toggleAddActivityModal,\n        startIcon: /*#__PURE__*/React.createElement(PlusIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 36\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, \"Add Activity\"), /*#__PURE__*/React.createElement(Snackbar, {\n        open: this.state.snackbarProperties.isOpen,\n        autoHideDuration: 5000,\n        onClose: this.snackbarClose,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Alert, {\n        onClose: this.snackbarClose,\n        severity: this.state.snackbarProperties.severity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, this.state.snackbarProperties.message)), /*#__PURE__*/React.createElement(ReactDialog, {\n        fields: this.activityDialogFields,\n        title: \"Add Activity\",\n        isOpen: this.state.addActivityModalOpen,\n        onClose: this.toggleAddActivityModal,\n        onSubmit: this.submitActivityAdd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ReactDialog, {\n        fields: this.activityDialogFields,\n        title: \"Update Activity\",\n        isOpen: this.state.updateActivityModalOpen,\n        onClose: this.toggleUpdateActivityModal,\n        onSubmit: this.submitActivityUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(PaginationTable, {\n        rows: this.state.rows,\n        onUpdate: this.onActivityUp,\n        onDelete: this.onActivityDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(SimpleMap, {\n        username: this.props.username,\n        updated: this.state.updated,\n        added: this.state.added,\n        deleted: this.state.deleted,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Computer/Desktop/homework/src/main/frontend/src/components/Home/Home.js"],"names":["React","Component","axios","Button","PlusIcon","Snackbar","Alert","ReactDialog","PaginationTable","SimpleMap","Home","constructor","props","activityDialogFields","id","label","type","toggleAddActivityModal","setState","addActivityModalOpen","state","toggleUpdateActivityModal","updateActivityModalOpen","toggleUpdated","updated","toggleAdded","added","toggleDeleted","deleted","submitActivityAdd","inputData","console","log","post","username","then","response","prevState","rows","data","snackbarOpen","catch","error","status","errors","defaultMessage","message","severity","snackbarProperties","isOpen","snackbarClose","onActivityUp","activityName","submitActivityUpdate","put","filter","activity","onActivityDelete","delete","componentDidMount","undefined","get","render","float","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PlusIcon from \"@material-ui/icons/Add\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport ReactDialog from \"../common/ReactDialog\";\r\nimport PaginationTable from \"../table/PaginationTable\";\r\nimport SimpleMap from \"../map_components/SimpleMap\";\r\n\r\nclass Home extends Component{\r\n    activityDialogFields = [\r\n        {id: \"activityName\", label: \"Activity Name\", type: \"text\"},\r\n        {id: \"startDate\", label: \"Start Date\", type: \"datetime-local\"},\r\n        {id: \"endDate\", label: \"End Date\", type: \"datetime-local\"},\r\n        {id: \"capacity\", label: \"Capacity\", type: \"number\"},\r\n        {id: \"latitude\", label: \"Latitude\", type: \"float\"},\r\n        {id: \"longitude\", label: \"Longitude\", type: \"float\"}\r\n    ]\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rows: [],\r\n            addActivityModalOpen: false,\r\n            updateActivityModalOpen: false,\r\n            snackbarProperties: {\r\n                isOpen: false,\r\n                message: \"\",\r\n                severity: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        console.log(this.props.username)\r\n        if(this.props.username!==undefined){\r\n            axios.get(\"/users/activities\")\r\n                .then(response => {\r\n                    this.setState({rows: response.data})\r\n                })\r\n        }\r\n    }\r\n\r\n    toggleAddActivityModal = () => {\r\n        this.setState({addActivityModalOpen: !this.state.addActivityModalOpen})\r\n    }\r\n\r\n    toggleUpdateActivityModal = () => {\r\n        this.setState({updateActivityModalOpen: !this.state.updateActivityModalOpen})\r\n    }\r\n\r\n    toggleUpdated = () => {\r\n        this.setState({updated: !this.state.updated})\r\n    }\r\n\r\n    toggleAdded = () => {\r\n        this.setState({added: !this.state.added})\r\n    }\r\n\r\n    toggleDeleted = () => {\r\n        this.setState({deleted: !this.state.deleted})\r\n    }\r\n\r\n    submitActivityAdd = (inputData) => {\r\n        this.toggleAddActivityModal();\r\n        console.log(inputData);\r\n        axios.post(\"/users/\"+this.props.username+\"/activities\", inputData)\r\n            .then(response => {\r\n                this.setState(prevState => (\r\n                    {rows: [...prevState.rows, response.data]}\r\n                ));\r\n                this.snackbarOpen(\"Activity has been added successfully!\", \"success\");\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response);\r\n                if (error.response.status === 400) {\r\n                    this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\");\r\n                }\r\n                else if (error.response.status === 500) {\r\n                    this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\");\r\n                }\r\n            })\r\n    }\r\n\r\n    snackbarOpen = (message, severity) => {\r\n        console.log(message, severity);\r\n        this.setState(prevState => {\r\n            let snackbarProperties = {...prevState.snackbarProperties}\r\n            snackbarProperties.isOpen = true;\r\n            snackbarProperties.message = message;\r\n            snackbarProperties.severity = severity;\r\n            return {snackbarProperties};\r\n        })\r\n    }\r\n\r\n    snackbarClose = () => {\r\n        this.setState(prevState => {\r\n            let snackbarProperties = {...prevState.snackbarProperties}\r\n            snackbarProperties.isOpen = false;\r\n            snackbarProperties.message = \"\";\r\n            snackbarProperties.severity = \"\";\r\n            return {snackbarProperties};\r\n        })\r\n    }\r\n\r\n    onActivityUp = (activityName) => {\r\n        this.toggleUpdateActivityModal();\r\n    }\r\n\r\n    submitActivityUpdate = (inputData) => {\r\n        this.toggleUpdateActivityModal();\r\n        axios.put(\"/users/\"+this.props.username+\"/activities/\" + inputData.activityName, inputData)\r\n            .then(response => {\r\n                this.setState( {\r\n                    rows: this.state.rows.filter((activity) => activity.activityName !== inputData.activityName)\r\n                })\r\n                this.setState(prevState => (\r\n                    {rows: [...prevState.rows, response.data]}\r\n                ));\r\n                this.snackbarOpen(\"Activity: \" + inputData.activityName + \" has been updated!\", \"success\")\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 400) {\r\n                    this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\")\r\n                }\r\n                else if (error.response.status === 500) {\r\n                    this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\")\r\n                }\r\n                console.log(error.response);\r\n            })\r\n    }\r\n\r\n    onActivityDelete = (activityName) => {\r\n        axios.delete(\"/users/\"+this.props.username+\"/activities/\" + activityName)\r\n            .then(response => {\r\n                this.setState( {\r\n                    rows: this.state.rows.filter((activity) => activity.activityName !== activityName)\r\n                })\r\n                this.snackbarOpen(\"Activity: \" + activityName + \" has been deleted!\", \"success\")\r\n            })\r\n    }\r\n    render(){\r\n        if(this.props.username!==undefined){\r\n            return (<div>\r\n                <Button variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{float: \"right\"}}\r\n                        onClick={this.toggleAddActivityModal}\r\n                        startIcon={<PlusIcon/>}>\r\n                    Add Activity\r\n                </Button>\r\n                <Snackbar open={this.state.snackbarProperties.isOpen} autoHideDuration={5000} onClose={this.snackbarClose}\r\n                          anchorOrigin={{vertical: 'top', horizontal: 'right'}}>\r\n                    <Alert onClose={this.snackbarClose} severity={this.state.snackbarProperties.severity}>\r\n                        {this.state.snackbarProperties.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n\r\n                <ReactDialog fields={this.activityDialogFields} title=\"Add Activity\" isOpen={this.state.addActivityModalOpen} onClose={this.toggleAddActivityModal} onSubmit={this.submitActivityAdd}/>\r\n\r\n                <ReactDialog fields={this.activityDialogFields} title=\"Update Activity\" isOpen={this.state.updateActivityModalOpen} onClose={this.toggleUpdateActivityModal} onSubmit={this.submitActivityUpdate}/>\r\n\r\n                <PaginationTable rows={this.state.rows} onUpdate={this.onActivityUp} onDelete={this.onActivityDelete}/>\r\n\r\n                <SimpleMap username={this.props.username} updated={this.state.updated} added={this.state.added} deleted={this.state.deleted}/>\r\n            </div>);\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}