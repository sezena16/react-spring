{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Computer\\\\Desktop\\\\homework\\\\src\\\\main\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport PaginationTable from \"./components/table/PaginationTable\";\nimport Button from \"@material-ui/core/Button\";\nimport PlusIcon from '@material-ui/icons/Add';\nimport axios from \"axios\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport ReactDialog from \"./components/common/ReactDialog\";\nimport SimpleMap from \"./components/map_components/SimpleMap\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.activityDialogFields = [{\n      id: \"activityName\",\n      label: \"Activity Name\",\n      type: \"text\"\n    }, {\n      id: \"startDate\",\n      label: \"Start Date\",\n      type: \"datetime-local\"\n    }, {\n      id: \"endDate\",\n      label: \"End Date\",\n      type: \"datetime-local\"\n    }, {\n      id: \"capacity\",\n      label: \"Capacity\",\n      type: \"number\"\n    }, {\n      id: \"latitude\",\n      label: \"Latitude\",\n      type: \"float\"\n    }, {\n      id: \"longitude\",\n      label: \"Longitude\",\n      type: \"float\"\n    }];\n\n    this.toggleAddActivityModal = () => {\n      this.setState({\n        addActivityModalOpen: !this.state.addActivityModalOpen\n      });\n    };\n\n    this.toggleUpdateActivityModal = () => {\n      this.setState({\n        updateActivityModalOpen: !this.state.updateActivityModalOpen\n      });\n    };\n\n    this.submitActivityAdd = inputData => {\n      this.toggleAddActivityModal();\n      axios.post(\"/users/admin/activities\", inputData).then(response => {\n        this.setState(prevState => ({\n          rows: [...prevState.rows, response.data]\n        }));\n        this.snackbarOpen(\"Activity has been added successfully!\", \"success\");\n      }).catch(error => {\n        if (error.response.status === 400) {\n          this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\");\n        } else if (error.response.status === 500) {\n          this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\");\n        }\n\n        console.log(error.response);\n      });\n    };\n\n    this.snackbarOpen = (message, severity) => {\n      console.log(message, severity);\n      this.setState(prevState => {\n        let snackbarProperties = { ...prevState.snackbarProperties\n        };\n        snackbarProperties.isOpen = true;\n        snackbarProperties.message = message;\n        snackbarProperties.severity = severity;\n        return {\n          snackbarProperties\n        };\n      });\n    };\n\n    this.snackbarClose = () => {\n      this.setState(prevState => {\n        let snackbarProperties = { ...prevState.snackbarProperties\n        };\n        snackbarProperties.isOpen = false;\n        snackbarProperties.message = \"\";\n        snackbarProperties.severity = \"\";\n        return {\n          snackbarProperties\n        };\n      });\n    };\n\n    this.onActivityUp = activityName => {\n      this.toggleUpdateActivityModal();\n    };\n\n    this.submitActivityUpdate = inputData => {\n      this.toggleUpdateActivityModal();\n      axios.put(\"/users/admin/activities/\" + inputData.activityName, inputData).then(response => {\n        this.setState({\n          rows: this.state.rows.filter(activity => activity.activityName !== inputData.activityName)\n        });\n        this.setState(prevState => ({\n          rows: [...prevState.rows, response.data]\n        }));\n        this.snackbarOpen(\"Activity: \" + inputData.activityName + \" has been updated!\", \"success\");\n      }).catch(error => {\n        if (error.response.status === 400) {\n          this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\");\n        } else if (error.response.status === 500) {\n          this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\");\n        }\n\n        console.log(error.response);\n      });\n    };\n\n    this.onActivityDelete = activityName => {\n      axios.delete(\"/users/admin/activities/\" + activityName).then(response => {\n        this.setState({\n          rows: this.state.rows.filter(activity => activity.activityName !== activityName)\n        });\n        this.snackbarOpen(\"Activity: \" + activityName + \" has been deleted!\", \"success\");\n      });\n    };\n\n    this.state = {\n      rows: [],\n      username: \"admin\",\n      addActivityModalOpen: false,\n      updateActivityModalOpen: false,\n      snackbarProperties: {\n        isOpen: false,\n        message: \"\",\n        severity: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/users/\" + this.state.username + \"/activities\").then(response => {\n      this.setState({\n        rows: response.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        float: \"right\"\n      },\n      onClick: this.toggleAddActivityModal,\n      startIcon: /*#__PURE__*/React.createElement(PlusIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 30\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"Add Activity\"), /*#__PURE__*/React.createElement(Snackbar, {\n      open: this.state.snackbarProperties.isOpen,\n      autoHideDuration: 5000,\n      onClose: this.snackbarClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: this.snackbarClose,\n      severity: this.state.snackbarProperties.severity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, this.state.snackbarProperties.message)), /*#__PURE__*/React.createElement(ReactDialog, {\n      fields: this.activityDialogFields,\n      title: \"Add Activity\",\n      isOpen: this.state.addActivityModalOpen,\n      onClose: this.toggleAddActivityModal,\n      onSubmit: this.submitActivityAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ReactDialog, {\n      fields: this.activityDialogFields,\n      title: \"Update Activity\",\n      isOpen: this.state.updateActivityModalOpen,\n      onClose: this.toggleUpdateActivityModal,\n      onSubmit: this.submitActivityUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(PaginationTable, {\n      rows: this.state.rows,\n      onUpdate: this.onActivityUp,\n      onDelete: this.onActivityDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SimpleMap, {\n      username: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Computer/Desktop/homework/src/main/frontend/src/App.js"],"names":["React","Component","PaginationTable","Button","PlusIcon","axios","Snackbar","Alert","ReactDialog","SimpleMap","App","constructor","activityDialogFields","id","label","type","toggleAddActivityModal","setState","addActivityModalOpen","state","toggleUpdateActivityModal","updateActivityModalOpen","submitActivityAdd","inputData","post","then","response","prevState","rows","data","snackbarOpen","catch","error","status","errors","defaultMessage","console","log","message","severity","snackbarProperties","isOpen","snackbarClose","onActivityUp","activityName","submitActivityUpdate","put","filter","activity","onActivityDelete","delete","username","componentDidMount","get","render","float","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PaginationTable from \"./components/table/PaginationTable\";\nimport Button from \"@material-ui/core/Button\";\nimport PlusIcon from '@material-ui/icons/Add';\nimport axios from \"axios\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport ReactDialog from \"./components/common/ReactDialog\";\nimport SimpleMap from \"./components/map_components/SimpleMap\";\n\nclass App extends Component{\n  activityDialogFields = [\n        {id: \"activityName\", label: \"Activity Name\", type: \"text\"},\n        {id: \"startDate\", label: \"Start Date\", type: \"datetime-local\"},\n        {id: \"endDate\", label: \"End Date\", type: \"datetime-local\"},\n        {id: \"capacity\", label: \"Capacity\", type: \"number\"},\n        {id: \"latitude\", label: \"Latitude\", type: \"float\"},\n        {id: \"longitude\", label: \"Longitude\", type: \"float\"}\n  ]\n\n\n  constructor() {\n    super();\n    this.state = {\n        rows: [],\n        username:\"admin\",\n        addActivityModalOpen: false,\n        updateActivityModalOpen: false,\n        snackbarProperties: {\n            isOpen: false,\n            message: \"\",\n            severity: \"\"\n        }\n    }\n  }\n\n  componentDidMount() {\n    axios.get(\"/users/\"+this.state.username+\"/activities\")\n        .then(response => {\n          this.setState({rows: response.data})\n        })\n  }\n\n  toggleAddActivityModal = () => {\n    this.setState({addActivityModalOpen: !this.state.addActivityModalOpen})\n  }\n\n  toggleUpdateActivityModal = () => {\n      this.setState({updateActivityModalOpen: !this.state.updateActivityModalOpen})\n  }\n\n  submitActivityAdd = (inputData) => {\n    this.toggleAddActivityModal();\n    axios.post(\"/users/admin/activities\", inputData)\n        .then(response => {\n          this.setState(prevState => (\n              {rows: [...prevState.rows, response.data]}\n          ));\n          this.snackbarOpen(\"Activity has been added successfully!\", \"success\");\n        })\n        .catch(error => {\n          if (error.response.status === 400) {\n            this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\")\n          }\n            else if (error.response.status === 500) {\n                this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\")\n            }\n          console.log(error.response);\n        })\n  }\n\n  snackbarOpen = (message, severity) => {\n    console.log(message, severity);\n    this.setState(prevState => {\n      let snackbarProperties = {...prevState.snackbarProperties}\n      snackbarProperties.isOpen = true;\n      snackbarProperties.message = message;\n      snackbarProperties.severity = severity;\n      return {snackbarProperties};\n    })\n  }\n\n  snackbarClose = () => {\n    this.setState(prevState => {\n      let snackbarProperties = {...prevState.snackbarProperties}\n      snackbarProperties.isOpen = false;\n      snackbarProperties.message = \"\";\n      snackbarProperties.severity = \"\";\n      return {snackbarProperties};\n    })\n  }\n\n  onActivityUp = (activityName) => {\n      this.toggleUpdateActivityModal();\n  }\n\n  submitActivityUpdate = (inputData) => {\n      this.toggleUpdateActivityModal();\n      axios.put(\"/users/admin/activities/\" + inputData.activityName, inputData)\n          .then(response => {\n              this.setState( {\n                  rows: this.state.rows.filter((activity) => activity.activityName !== inputData.activityName)\n              })\n              this.setState(prevState => (\n                  {rows: [...prevState.rows, response.data]}\n                  ));\n              this.snackbarOpen(\"Activity: \" + inputData.activityName + \" has been updated!\", \"success\")\n          })\n          .catch(error => {\n          if (error.response.status === 400) {\n              this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\")\n          }\n              else if (error.response.status === 500) {\n                  this.snackbarOpen(error.response.data.errors[0].defaultMessage, \"error\")\n              }\n          console.log(error.response);\n        })\n  }\n\n  onActivityDelete = (activityName) => {\n    axios.delete(\"/users/admin/activities/\" + activityName)\n        .then(response => {\n          this.setState( {\n            rows: this.state.rows.filter((activity) => activity.activityName !== activityName)\n          })\n          this.snackbarOpen(\"Activity: \" + activityName + \" has been deleted!\", \"success\")\n        })\n  }\n\n  render() {\n\n    return (\n        <div className=\"App\">\n          <Button variant=\"contained\"\n                  color=\"primary\"\n                  style={{float: \"right\"}}\n                  onClick={this.toggleAddActivityModal}\n                  startIcon={<PlusIcon/>}>\n            Add Activity\n          </Button>\n          <Snackbar open={this.state.snackbarProperties.isOpen} autoHideDuration={5000} onClose={this.snackbarClose}\n                    anchorOrigin={{vertical: 'top', horizontal: 'right'}}>\n            <Alert onClose={this.snackbarClose} severity={this.state.snackbarProperties.severity}>\n              {this.state.snackbarProperties.message}\n            </Alert>\n          </Snackbar>\n\n            <ReactDialog fields={this.activityDialogFields} title=\"Add Activity\" isOpen={this.state.addActivityModalOpen} onClose={this.toggleAddActivityModal} onSubmit={this.submitActivityAdd}/>\n\n            <ReactDialog fields={this.activityDialogFields} title=\"Update Activity\" isOpen={this.state.updateActivityModalOpen} onClose={this.toggleUpdateActivityModal} onSubmit={this.submitActivityUpdate}/>\n\n            <PaginationTable rows={this.state.rows} onUpdate={this.onActivityUp} onDelete={this.onActivityDelete}/>\n\n            <SimpleMap username={this.state.username}/>\n\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}